// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: board.proto

package board

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data Structures (Messages)
type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage  uint64 `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	TotalPages   uint64 `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	ItemsPerPage uint64 `protobuf:"varint,3,opt,name=items_per_page,json=itemsPerPage,proto3" json:"items_per_page,omitempty"`
	TotalItems   uint64 `protobuf:"varint,4,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	HasMore      bool   `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetCurrentPage() uint64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *Pagination) GetTotalPages() uint64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetItemsPerPage() uint64 {
	if x != nil {
		return x.ItemsPerPage
	}
	return 0
}

func (x *Pagination) GetTotalItems() uint64 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *Pagination) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type Board struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardID    uint64                 `protobuf:"varint,1,opt,name=boardID,proto3" json:"boardID,omitempty"`
	UserID     uint64                 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Name       string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Visibility string                 `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	Members    []*BoardMember         `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
	Lists      []*List                `protobuf:"bytes,6,rep,name=lists,proto3" json:"lists,omitempty"`
	Cards      []*CardMeta            `protobuf:"bytes,7,rep,name=cards,proto3" json:"cards,omitempty"`
	Labels     []*Label               `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Board) Reset() {
	*x = Board{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Board) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Board) ProtoMessage() {}

func (x *Board) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Board.ProtoReflect.Descriptor instead.
func (*Board) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{1}
}

func (x *Board) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *Board) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Board) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Board) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *Board) GetMembers() []*BoardMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Board) GetLists() []*List {
	if x != nil {
		return x.Lists
	}
	return nil
}

func (x *Board) GetCards() []*CardMeta {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *Board) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Board) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Board) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListID   uint64 `protobuf:"varint,1,opt,name=listID,proto3" json:"listID,omitempty"`
	BoardID  uint64 `protobuf:"varint,2,opt,name=boardID,proto3" json:"boardID,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Position int64  `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetListID() uint64 {
	if x != nil {
		return x.ListID
	}
	return 0
}

func (x *List) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *List) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *List) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardID      uint64                 `protobuf:"varint,1,opt,name=cardID,proto3" json:"cardID,omitempty"`
	BoardID     uint64                 `protobuf:"varint,2,opt,name=boardID,proto3" json:"boardID,omitempty"`
	ListID      uint64                 `protobuf:"varint,3,opt,name=listID,proto3" json:"listID,omitempty"`
	Name        string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Position    int64                  `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`
	Attachments []uint64               `protobuf:"varint,7,rep,packed,name=attachments,proto3" json:"attachments,omitempty"`
	Labels      []uint64               `protobuf:"varint,8,rep,packed,name=labels,proto3" json:"labels,omitempty"`
	Members     []uint64               `protobuf:"varint,9,rep,packed,name=members,proto3" json:"members,omitempty"`
	IsCompleted bool                   `protobuf:"varint,10,opt,name=isCompleted,proto3" json:"isCompleted,omitempty"`
	StartDate   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	DueDate     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{3}
}

func (x *Card) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

func (x *Card) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *Card) GetListID() uint64 {
	if x != nil {
		return x.ListID
	}
	return 0
}

func (x *Card) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Card) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Card) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Card) GetAttachments() []uint64 {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Card) GetLabels() []uint64 {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Card) GetMembers() []uint64 {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Card) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *Card) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Card) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *Card) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Card) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CardMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardID          uint64                 `protobuf:"varint,1,opt,name=cardID,proto3" json:"cardID,omitempty"`
	BoardID         uint64                 `protobuf:"varint,2,opt,name=boardID,proto3" json:"boardID,omitempty"`
	ListID          uint64                 `protobuf:"varint,3,opt,name=listID,proto3" json:"listID,omitempty"`
	Name            string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Position        int64                  `protobuf:"varint,5,opt,name=position,proto3" json:"position,omitempty"`
	Labels          []uint64               `protobuf:"varint,6,rep,packed,name=labels,proto3" json:"labels,omitempty"`
	Members         []uint64               `protobuf:"varint,7,rep,packed,name=members,proto3" json:"members,omitempty"`
	TotalAttachment uint64                 `protobuf:"varint,8,opt,name=totalAttachment,proto3" json:"totalAttachment,omitempty"`
	TotalComment    uint64                 `protobuf:"varint,9,opt,name=totalComment,proto3" json:"totalComment,omitempty"`
	IsCompleted     bool                   `protobuf:"varint,10,opt,name=isCompleted,proto3" json:"isCompleted,omitempty"`
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	DueDate         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CardMeta) Reset() {
	*x = CardMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMeta) ProtoMessage() {}

func (x *CardMeta) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMeta.ProtoReflect.Descriptor instead.
func (*CardMeta) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{4}
}

func (x *CardMeta) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

func (x *CardMeta) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *CardMeta) GetListID() uint64 {
	if x != nil {
		return x.ListID
	}
	return 0
}

func (x *CardMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardMeta) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *CardMeta) GetLabels() []uint64 {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CardMeta) GetMembers() []uint64 {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CardMeta) GetTotalAttachment() uint64 {
	if x != nil {
		return x.TotalAttachment
	}
	return 0
}

func (x *CardMeta) GetTotalComment() uint64 {
	if x != nil {
		return x.TotalComment
	}
	return 0
}

func (x *CardMeta) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *CardMeta) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CardMeta) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *CardMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CardMeta) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelID uint64 `protobuf:"varint,1,opt,name=labelID,proto3" json:"labelID,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color   string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	BoardID uint64 `protobuf:"varint,4,opt,name=boardID,proto3" json:"boardID,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{5}
}

func (x *Label) GetLabelID() uint64 {
	if x != nil {
		return x.LabelID
	}
	return 0
}

func (x *Label) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Label) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Label) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachmentID uint64 `protobuf:"varint,1,opt,name=attachmentID,proto3" json:"attachmentID,omitempty"`
	CardID       uint64 `protobuf:"varint,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	FileName     string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FilePath     string `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Type         string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Thumbnail    string `protobuf:"bytes,6,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{6}
}

func (x *Attachment) GetAttachmentID() uint64 {
	if x != nil {
		return x.AttachmentID
	}
	return 0
}

func (x *Attachment) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

func (x *Attachment) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Attachment) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *Attachment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Attachment) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

type BoardMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardID    uint64                 `protobuf:"varint,1,opt,name=boardID,proto3" json:"boardID,omitempty"`
	Name       string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Visibility string                 `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BoardMeta) Reset() {
	*x = BoardMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardMeta) ProtoMessage() {}

func (x *BoardMeta) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardMeta.ProtoReflect.Descriptor instead.
func (*BoardMeta) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{7}
}

func (x *BoardMeta) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *BoardMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BoardMeta) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *BoardMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BoardMeta) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type BoardMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardID  uint64 `protobuf:"varint,1,opt,name=boardID,proto3" json:"boardID,omitempty"`
	UserID   uint64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Fullname string `protobuf:"bytes,4,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Role     string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *BoardMember) Reset() {
	*x = BoardMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoardMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardMember) ProtoMessage() {}

func (x *BoardMember) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardMember.ProtoReflect.Descriptor instead.
func (*BoardMember) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{8}
}

func (x *BoardMember) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

func (x *BoardMember) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BoardMember) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BoardMember) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *BoardMember) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

// Request and Response Messages
type CreateBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateBoardRequest) Reset() {
	*x = CreateBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBoardRequest) ProtoMessage() {}

func (x *CreateBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBoardRequest.ProtoReflect.Descriptor instead.
func (*CreateBoardRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{9}
}

func (x *CreateBoardRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board *Board `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
}

func (x *CreateBoardResponse) Reset() {
	*x = CreateBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBoardResponse) ProtoMessage() {}

func (x *CreateBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBoardResponse.ProtoReflect.Descriptor instead.
func (*CreateBoardResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{10}
}

func (x *CreateBoardResponse) GetBoard() *Board {
	if x != nil {
		return x.Board
	}
	return nil
}

type GetBoardByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBoardByIDRequest) Reset() {
	*x = GetBoardByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardByIDRequest) ProtoMessage() {}

func (x *GetBoardByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardByIDRequest.ProtoReflect.Descriptor instead.
func (*GetBoardByIDRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{11}
}

type GetBoardByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board *Board `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
}

func (x *GetBoardByIDResponse) Reset() {
	*x = GetBoardByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardByIDResponse) ProtoMessage() {}

func (x *GetBoardByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardByIDResponse.ProtoReflect.Descriptor instead.
func (*GetBoardByIDResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{12}
}

func (x *GetBoardByIDResponse) GetBoard() *Board {
	if x != nil {
		return x.Board
	}
	return nil
}

type GetBoardListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber uint64 `protobuf:"varint,1,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	PageSize   uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetBoardListRequest) Reset() {
	*x = GetBoardListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardListRequest) ProtoMessage() {}

func (x *GetBoardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardListRequest.ProtoReflect.Descriptor instead.
func (*GetBoardListRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{13}
}

func (x *GetBoardListRequest) GetPageNumber() uint64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetBoardListRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetBoardListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boards     []*BoardMeta `protobuf:"bytes,1,rep,name=boards,proto3" json:"boards,omitempty"`
	Pagination *Pagination  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetBoardListResponse) Reset() {
	*x = GetBoardListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardListResponse) ProtoMessage() {}

func (x *GetBoardListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardListResponse.ProtoReflect.Descriptor instead.
func (*GetBoardListResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{14}
}

func (x *GetBoardListResponse) GetBoards() []*BoardMeta {
	if x != nil {
		return x.Boards
	}
	return nil
}

func (x *GetBoardListResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetBoardMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBoardMembersRequest) Reset() {
	*x = GetBoardMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardMembersRequest) ProtoMessage() {}

func (x *GetBoardMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardMembersRequest.ProtoReflect.Descriptor instead.
func (*GetBoardMembersRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{15}
}

type GetBoardMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*BoardMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GetBoardMembersResponse) Reset() {
	*x = GetBoardMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardMembersResponse) ProtoMessage() {}

func (x *GetBoardMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardMembersResponse.ProtoReflect.Descriptor instead.
func (*GetBoardMembersResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{16}
}

func (x *GetBoardMembersResponse) GetMembers() []*BoardMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type UpdateBoardNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 boardID = 1;
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateBoardNameRequest) Reset() {
	*x = UpdateBoardNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBoardNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBoardNameRequest) ProtoMessage() {}

func (x *UpdateBoardNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBoardNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateBoardNameRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateBoardNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateBoardNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateBoardNameResponse) Reset() {
	*x = UpdateBoardNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBoardNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBoardNameResponse) ProtoMessage() {}

func (x *UpdateBoardNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBoardNameResponse.ProtoReflect.Descriptor instead.
func (*UpdateBoardNameResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateBoardNameResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddBoardUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 boardID = 1;
	UserIDs []uint64 `protobuf:"varint,1,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"`
	Role    string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AddBoardUsersRequest) Reset() {
	*x = AddBoardUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBoardUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBoardUsersRequest) ProtoMessage() {}

func (x *AddBoardUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBoardUsersRequest.ProtoReflect.Descriptor instead.
func (*AddBoardUsersRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{19}
}

func (x *AddBoardUsersRequest) GetUserIDs() []uint64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *AddBoardUsersRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AddBoardUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddBoardUsersResponse) Reset() {
	*x = AddBoardUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBoardUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBoardUsersResponse) ProtoMessage() {}

func (x *AddBoardUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBoardUsersResponse.ProtoReflect.Descriptor instead.
func (*AddBoardUsersResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{20}
}

func (x *AddBoardUsersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RemoveBoardUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 boardID = 1;
	UserIDs []uint64 `protobuf:"varint,1,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"`
}

func (x *RemoveBoardUsersRequest) Reset() {
	*x = RemoveBoardUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBoardUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBoardUsersRequest) ProtoMessage() {}

func (x *RemoveBoardUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBoardUsersRequest.ProtoReflect.Descriptor instead.
func (*RemoveBoardUsersRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveBoardUsersRequest) GetUserIDs() []uint64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type RemoveBoardUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RemoveBoardUsersResponse) Reset() {
	*x = RemoveBoardUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBoardUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBoardUsersResponse) ProtoMessage() {}

func (x *RemoveBoardUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBoardUsersResponse.ProtoReflect.Descriptor instead.
func (*RemoveBoardUsersResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveBoardUsersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AssignBoardUsersRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 boardID = 1;
	UserIDs []uint64 `protobuf:"varint,1,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"`
	Role    string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AssignBoardUsersRoleRequest) Reset() {
	*x = AssignBoardUsersRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignBoardUsersRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignBoardUsersRoleRequest) ProtoMessage() {}

func (x *AssignBoardUsersRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignBoardUsersRoleRequest.ProtoReflect.Descriptor instead.
func (*AssignBoardUsersRoleRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{23}
}

func (x *AssignBoardUsersRoleRequest) GetUserIDs() []uint64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *AssignBoardUsersRoleRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AssignBoardUsersRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AssignBoardUsersRoleResponse) Reset() {
	*x = AssignBoardUsersRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignBoardUsersRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignBoardUsersRoleResponse) ProtoMessage() {}

func (x *AssignBoardUsersRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignBoardUsersRoleResponse.ProtoReflect.Descriptor instead.
func (*AssignBoardUsersRoleResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{24}
}

func (x *AssignBoardUsersRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChangeBoardOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 boardID = 1;
	NewOwnerID uint64 `protobuf:"varint,1,opt,name=newOwnerID,proto3" json:"newOwnerID,omitempty"`
}

func (x *ChangeBoardOwnerRequest) Reset() {
	*x = ChangeBoardOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeBoardOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBoardOwnerRequest) ProtoMessage() {}

func (x *ChangeBoardOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBoardOwnerRequest.ProtoReflect.Descriptor instead.
func (*ChangeBoardOwnerRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{25}
}

func (x *ChangeBoardOwnerRequest) GetNewOwnerID() uint64 {
	if x != nil {
		return x.NewOwnerID
	}
	return 0
}

type ChangeBoardOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChangeBoardOwnerResponse) Reset() {
	*x = ChangeBoardOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeBoardOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBoardOwnerResponse) ProtoMessage() {}

func (x *ChangeBoardOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBoardOwnerResponse.ProtoReflect.Descriptor instead.
func (*ChangeBoardOwnerResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{26}
}

func (x *ChangeBoardOwnerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChangeBoardVisibilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 boardID = 1;
	Visibility string `protobuf:"bytes,1,opt,name=visibility,proto3" json:"visibility,omitempty"`
}

func (x *ChangeBoardVisibilityRequest) Reset() {
	*x = ChangeBoardVisibilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeBoardVisibilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBoardVisibilityRequest) ProtoMessage() {}

func (x *ChangeBoardVisibilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBoardVisibilityRequest.ProtoReflect.Descriptor instead.
func (*ChangeBoardVisibilityRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{27}
}

func (x *ChangeBoardVisibilityRequest) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

type ChangeBoardVisibilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChangeBoardVisibilityResponse) Reset() {
	*x = ChangeBoardVisibilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeBoardVisibilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBoardVisibilityResponse) ProtoMessage() {}

func (x *ChangeBoardVisibilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBoardVisibilityResponse.ProtoReflect.Descriptor instead.
func (*ChangeBoardVisibilityResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{28}
}

func (x *ChangeBoardVisibilityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetArchivedBoardListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber uint64 `protobuf:"varint,1,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	PageSize   uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserID     uint64 `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetArchivedBoardListRequest) Reset() {
	*x = GetArchivedBoardListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArchivedBoardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArchivedBoardListRequest) ProtoMessage() {}

func (x *GetArchivedBoardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArchivedBoardListRequest.ProtoReflect.Descriptor instead.
func (*GetArchivedBoardListRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{29}
}

func (x *GetArchivedBoardListRequest) GetPageNumber() uint64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetArchivedBoardListRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetArchivedBoardListRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetArchivedBoardListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boards     []*BoardMeta `protobuf:"bytes,1,rep,name=boards,proto3" json:"boards,omitempty"`
	Pagination *Pagination  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetArchivedBoardListResponse) Reset() {
	*x = GetArchivedBoardListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArchivedBoardListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArchivedBoardListResponse) ProtoMessage() {}

func (x *GetArchivedBoardListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArchivedBoardListResponse.ProtoReflect.Descriptor instead.
func (*GetArchivedBoardListResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{30}
}

func (x *GetArchivedBoardListResponse) GetBoards() []*BoardMeta {
	if x != nil {
		return x.Boards
	}
	return nil
}

func (x *GetArchivedBoardListResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type RestoreBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestoreBoardRequest) Reset() {
	*x = RestoreBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreBoardRequest) ProtoMessage() {}

func (x *RestoreBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreBoardRequest.ProtoReflect.Descriptor instead.
func (*RestoreBoardRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{31}
}

type RestoreBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RestoreBoardResponse) Reset() {
	*x = RestoreBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreBoardResponse) ProtoMessage() {}

func (x *RestoreBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreBoardResponse.ProtoReflect.Descriptor instead.
func (*RestoreBoardResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{32}
}

func (x *RestoreBoardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 boardID = 1;
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *AddLabelRequest) Reset() {
	*x = AddLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLabelRequest) ProtoMessage() {}

func (x *AddLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLabelRequest.ProtoReflect.Descriptor instead.
func (*AddLabelRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{33}
}

func (x *AddLabelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddLabelRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type AddLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *AddLabelResponse) Reset() {
	*x = AddLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLabelResponse) ProtoMessage() {}

func (x *AddLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLabelResponse.ProtoReflect.Descriptor instead.
func (*AddLabelResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{34}
}

func (x *AddLabelResponse) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type RemoveLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uint64 boardID = 1;
	LabelID uint64 `protobuf:"varint,1,opt,name=labelID,proto3" json:"labelID,omitempty"`
}

func (x *RemoveLabelRequest) Reset() {
	*x = RemoveLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLabelRequest) ProtoMessage() {}

func (x *RemoveLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLabelRequest.ProtoReflect.Descriptor instead.
func (*RemoveLabelRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{35}
}

func (x *RemoveLabelRequest) GetLabelID() uint64 {
	if x != nil {
		return x.LabelID
	}
	return 0
}

type RemoveLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RemoveLabelResponse) Reset() {
	*x = RemoveLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLabelResponse) ProtoMessage() {}

func (x *RemoveLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLabelResponse.ProtoReflect.Descriptor instead.
func (*RemoveLabelResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{36}
}

func (x *RemoveLabelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ArchiveBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArchiveBoardRequest) Reset() {
	*x = ArchiveBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveBoardRequest) ProtoMessage() {}

func (x *ArchiveBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveBoardRequest.ProtoReflect.Descriptor instead.
func (*ArchiveBoardRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{37}
}

type ArchiveBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ArchiveBoardResponse) Reset() {
	*x = ArchiveBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveBoardResponse) ProtoMessage() {}

func (x *ArchiveBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveBoardResponse.ProtoReflect.Descriptor instead.
func (*ArchiveBoardResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{38}
}

func (x *ArchiveBoardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBoardRequest) Reset() {
	*x = DeleteBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBoardRequest) ProtoMessage() {}

func (x *DeleteBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBoardRequest.ProtoReflect.Descriptor instead.
func (*DeleteBoardRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{39}
}

type DeleteBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteBoardResponse) Reset() {
	*x = DeleteBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBoardResponse) ProtoMessage() {}

func (x *DeleteBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBoardResponse.ProtoReflect.Descriptor instead.
func (*DeleteBoardResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteBoardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBoardIDByListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListID uint64 `protobuf:"varint,1,opt,name=listID,proto3" json:"listID,omitempty"`
}

func (x *GetBoardIDByListRequest) Reset() {
	*x = GetBoardIDByListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardIDByListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardIDByListRequest) ProtoMessage() {}

func (x *GetBoardIDByListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardIDByListRequest.ProtoReflect.Descriptor instead.
func (*GetBoardIDByListRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{41}
}

func (x *GetBoardIDByListRequest) GetListID() uint64 {
	if x != nil {
		return x.ListID
	}
	return 0
}

type GetBoardIDByListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardID uint64 `protobuf:"varint,1,opt,name=boardID,proto3" json:"boardID,omitempty"`
}

func (x *GetBoardIDByListResponse) Reset() {
	*x = GetBoardIDByListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardIDByListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardIDByListResponse) ProtoMessage() {}

func (x *GetBoardIDByListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardIDByListResponse.ProtoReflect.Descriptor instead.
func (*GetBoardIDByListResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{42}
}

func (x *GetBoardIDByListResponse) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

type GetBoardIDByCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardID uint64 `protobuf:"varint,1,opt,name=cardID,proto3" json:"cardID,omitempty"`
}

func (x *GetBoardIDByCardRequest) Reset() {
	*x = GetBoardIDByCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardIDByCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardIDByCardRequest) ProtoMessage() {}

func (x *GetBoardIDByCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardIDByCardRequest.ProtoReflect.Descriptor instead.
func (*GetBoardIDByCardRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{43}
}

func (x *GetBoardIDByCardRequest) GetCardID() uint64 {
	if x != nil {
		return x.CardID
	}
	return 0
}

type GetBoardIDByCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardID uint64 `protobuf:"varint,1,opt,name=boardID,proto3" json:"boardID,omitempty"`
}

func (x *GetBoardIDByCardResponse) Reset() {
	*x = GetBoardIDByCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_board_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoardIDByCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardIDByCardResponse) ProtoMessage() {}

func (x *GetBoardIDByCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardIDByCardResponse.ProtoReflect.Descriptor instead.
func (*GetBoardIDByCardResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{44}
}

func (x *GetBoardIDByCardResponse) GetBoardID() uint64 {
	if x != nil {
		return x.BoardID
	}
	return 0
}

var File_board_proto protoreflect.FileDescriptor

var file_board_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x89, 0x03, 0x0a,
	0x05, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x05,
	0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x73, 0x74,
	0x73, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x70, 0x62, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x68, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x80, 0x04, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72,
	0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8e, 0x04, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x65, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x22, 0xb4, 0x01,
	0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x22, 0xcf, 0x01, 0x0a, 0x09, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x77, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x06, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x18, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x33, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x31, 0x0a, 0x15, 0x41, 0x64,
	0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x33, 0x0a,
	0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x38, 0x0a, 0x1c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x39, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65,
	0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x18, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x3e, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x22, 0x39, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7f,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x06, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x06, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x15, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x70, 0x62, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x2e, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x44, 0x22,
	0x2f, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x15, 0x0a, 0x13, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x2f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x42, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x42, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x44, 0x32, 0xf3, 0x0b, 0x0a, 0x0c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x1b, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x24, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x1f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x18, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1b, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x42, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x42,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x44, 0x42, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x42, 0x79, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6d, 0x38, 0x38, 0x38, 0x73, 0x6d, 0x2f, 0x68,
	0x61, 0x6c, 0x74, 0x65, 0x6e, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_board_proto_rawDescOnce sync.Once
	file_board_proto_rawDescData = file_board_proto_rawDesc
)

func file_board_proto_rawDescGZIP() []byte {
	file_board_proto_rawDescOnce.Do(func() {
		file_board_proto_rawDescData = protoimpl.X.CompressGZIP(file_board_proto_rawDescData)
	})
	return file_board_proto_rawDescData
}

var file_board_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_board_proto_goTypes = []interface{}{
	(*Pagination)(nil),                    // 0: boardpb.Pagination
	(*Board)(nil),                         // 1: boardpb.Board
	(*List)(nil),                          // 2: boardpb.List
	(*Card)(nil),                          // 3: boardpb.Card
	(*CardMeta)(nil),                      // 4: boardpb.CardMeta
	(*Label)(nil),                         // 5: boardpb.Label
	(*Attachment)(nil),                    // 6: boardpb.Attachment
	(*BoardMeta)(nil),                     // 7: boardpb.BoardMeta
	(*BoardMember)(nil),                   // 8: boardpb.BoardMember
	(*CreateBoardRequest)(nil),            // 9: boardpb.CreateBoardRequest
	(*CreateBoardResponse)(nil),           // 10: boardpb.CreateBoardResponse
	(*GetBoardByIDRequest)(nil),           // 11: boardpb.GetBoardByIDRequest
	(*GetBoardByIDResponse)(nil),          // 12: boardpb.GetBoardByIDResponse
	(*GetBoardListRequest)(nil),           // 13: boardpb.GetBoardListRequest
	(*GetBoardListResponse)(nil),          // 14: boardpb.GetBoardListResponse
	(*GetBoardMembersRequest)(nil),        // 15: boardpb.GetBoardMembersRequest
	(*GetBoardMembersResponse)(nil),       // 16: boardpb.GetBoardMembersResponse
	(*UpdateBoardNameRequest)(nil),        // 17: boardpb.UpdateBoardNameRequest
	(*UpdateBoardNameResponse)(nil),       // 18: boardpb.UpdateBoardNameResponse
	(*AddBoardUsersRequest)(nil),          // 19: boardpb.AddBoardUsersRequest
	(*AddBoardUsersResponse)(nil),         // 20: boardpb.AddBoardUsersResponse
	(*RemoveBoardUsersRequest)(nil),       // 21: boardpb.RemoveBoardUsersRequest
	(*RemoveBoardUsersResponse)(nil),      // 22: boardpb.RemoveBoardUsersResponse
	(*AssignBoardUsersRoleRequest)(nil),   // 23: boardpb.AssignBoardUsersRoleRequest
	(*AssignBoardUsersRoleResponse)(nil),  // 24: boardpb.AssignBoardUsersRoleResponse
	(*ChangeBoardOwnerRequest)(nil),       // 25: boardpb.ChangeBoardOwnerRequest
	(*ChangeBoardOwnerResponse)(nil),      // 26: boardpb.ChangeBoardOwnerResponse
	(*ChangeBoardVisibilityRequest)(nil),  // 27: boardpb.ChangeBoardVisibilityRequest
	(*ChangeBoardVisibilityResponse)(nil), // 28: boardpb.ChangeBoardVisibilityResponse
	(*GetArchivedBoardListRequest)(nil),   // 29: boardpb.GetArchivedBoardListRequest
	(*GetArchivedBoardListResponse)(nil),  // 30: boardpb.GetArchivedBoardListResponse
	(*RestoreBoardRequest)(nil),           // 31: boardpb.RestoreBoardRequest
	(*RestoreBoardResponse)(nil),          // 32: boardpb.RestoreBoardResponse
	(*AddLabelRequest)(nil),               // 33: boardpb.AddLabelRequest
	(*AddLabelResponse)(nil),              // 34: boardpb.AddLabelResponse
	(*RemoveLabelRequest)(nil),            // 35: boardpb.RemoveLabelRequest
	(*RemoveLabelResponse)(nil),           // 36: boardpb.RemoveLabelResponse
	(*ArchiveBoardRequest)(nil),           // 37: boardpb.ArchiveBoardRequest
	(*ArchiveBoardResponse)(nil),          // 38: boardpb.ArchiveBoardResponse
	(*DeleteBoardRequest)(nil),            // 39: boardpb.DeleteBoardRequest
	(*DeleteBoardResponse)(nil),           // 40: boardpb.DeleteBoardResponse
	(*GetBoardIDByListRequest)(nil),       // 41: boardpb.GetBoardIDByListRequest
	(*GetBoardIDByListResponse)(nil),      // 42: boardpb.GetBoardIDByListResponse
	(*GetBoardIDByCardRequest)(nil),       // 43: boardpb.GetBoardIDByCardRequest
	(*GetBoardIDByCardResponse)(nil),      // 44: boardpb.GetBoardIDByCardResponse
	(*timestamppb.Timestamp)(nil),         // 45: google.protobuf.Timestamp
}
var file_board_proto_depIdxs = []int32{
	8,  // 0: boardpb.Board.members:type_name -> boardpb.BoardMember
	2,  // 1: boardpb.Board.lists:type_name -> boardpb.List
	4,  // 2: boardpb.Board.cards:type_name -> boardpb.CardMeta
	5,  // 3: boardpb.Board.labels:type_name -> boardpb.Label
	45, // 4: boardpb.Board.created_at:type_name -> google.protobuf.Timestamp
	45, // 5: boardpb.Board.updated_at:type_name -> google.protobuf.Timestamp
	45, // 6: boardpb.Card.start_date:type_name -> google.protobuf.Timestamp
	45, // 7: boardpb.Card.due_date:type_name -> google.protobuf.Timestamp
	45, // 8: boardpb.Card.created_at:type_name -> google.protobuf.Timestamp
	45, // 9: boardpb.Card.updated_at:type_name -> google.protobuf.Timestamp
	45, // 10: boardpb.CardMeta.start_date:type_name -> google.protobuf.Timestamp
	45, // 11: boardpb.CardMeta.due_date:type_name -> google.protobuf.Timestamp
	45, // 12: boardpb.CardMeta.created_at:type_name -> google.protobuf.Timestamp
	45, // 13: boardpb.CardMeta.updated_at:type_name -> google.protobuf.Timestamp
	45, // 14: boardpb.BoardMeta.created_at:type_name -> google.protobuf.Timestamp
	45, // 15: boardpb.BoardMeta.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 16: boardpb.CreateBoardResponse.board:type_name -> boardpb.Board
	1,  // 17: boardpb.GetBoardByIDResponse.board:type_name -> boardpb.Board
	7,  // 18: boardpb.GetBoardListResponse.boards:type_name -> boardpb.BoardMeta
	0,  // 19: boardpb.GetBoardListResponse.pagination:type_name -> boardpb.Pagination
	8,  // 20: boardpb.GetBoardMembersResponse.members:type_name -> boardpb.BoardMember
	7,  // 21: boardpb.GetArchivedBoardListResponse.boards:type_name -> boardpb.BoardMeta
	0,  // 22: boardpb.GetArchivedBoardListResponse.pagination:type_name -> boardpb.Pagination
	5,  // 23: boardpb.AddLabelResponse.label:type_name -> boardpb.Label
	9,  // 24: boardpb.BoardService.CreateBoard:input_type -> boardpb.CreateBoardRequest
	11, // 25: boardpb.BoardService.GetBoardByID:input_type -> boardpb.GetBoardByIDRequest
	13, // 26: boardpb.BoardService.GetBoardList:input_type -> boardpb.GetBoardListRequest
	29, // 27: boardpb.BoardService.GetArchivedBoardList:input_type -> boardpb.GetArchivedBoardListRequest
	15, // 28: boardpb.BoardService.GetBoardMembers:input_type -> boardpb.GetBoardMembersRequest
	17, // 29: boardpb.BoardService.UpdateBoardName:input_type -> boardpb.UpdateBoardNameRequest
	19, // 30: boardpb.BoardService.AddBoardUsers:input_type -> boardpb.AddBoardUsersRequest
	21, // 31: boardpb.BoardService.RemoveBoardUsers:input_type -> boardpb.RemoveBoardUsersRequest
	23, // 32: boardpb.BoardService.AssignBoardUsersRole:input_type -> boardpb.AssignBoardUsersRoleRequest
	25, // 33: boardpb.BoardService.ChangeBoardOwner:input_type -> boardpb.ChangeBoardOwnerRequest
	27, // 34: boardpb.BoardService.ChangeBoardVisibility:input_type -> boardpb.ChangeBoardVisibilityRequest
	33, // 35: boardpb.BoardService.AddLabel:input_type -> boardpb.AddLabelRequest
	35, // 36: boardpb.BoardService.RemoveLabel:input_type -> boardpb.RemoveLabelRequest
	31, // 37: boardpb.BoardService.RestoreBoard:input_type -> boardpb.RestoreBoardRequest
	37, // 38: boardpb.BoardService.ArchiveBoard:input_type -> boardpb.ArchiveBoardRequest
	39, // 39: boardpb.BoardService.DeleteBoard:input_type -> boardpb.DeleteBoardRequest
	41, // 40: boardpb.BoardService.GetBoardIDByList:input_type -> boardpb.GetBoardIDByListRequest
	43, // 41: boardpb.BoardService.GetBoardIDByCard:input_type -> boardpb.GetBoardIDByCardRequest
	10, // 42: boardpb.BoardService.CreateBoard:output_type -> boardpb.CreateBoardResponse
	12, // 43: boardpb.BoardService.GetBoardByID:output_type -> boardpb.GetBoardByIDResponse
	14, // 44: boardpb.BoardService.GetBoardList:output_type -> boardpb.GetBoardListResponse
	30, // 45: boardpb.BoardService.GetArchivedBoardList:output_type -> boardpb.GetArchivedBoardListResponse
	16, // 46: boardpb.BoardService.GetBoardMembers:output_type -> boardpb.GetBoardMembersResponse
	18, // 47: boardpb.BoardService.UpdateBoardName:output_type -> boardpb.UpdateBoardNameResponse
	20, // 48: boardpb.BoardService.AddBoardUsers:output_type -> boardpb.AddBoardUsersResponse
	22, // 49: boardpb.BoardService.RemoveBoardUsers:output_type -> boardpb.RemoveBoardUsersResponse
	24, // 50: boardpb.BoardService.AssignBoardUsersRole:output_type -> boardpb.AssignBoardUsersRoleResponse
	26, // 51: boardpb.BoardService.ChangeBoardOwner:output_type -> boardpb.ChangeBoardOwnerResponse
	28, // 52: boardpb.BoardService.ChangeBoardVisibility:output_type -> boardpb.ChangeBoardVisibilityResponse
	34, // 53: boardpb.BoardService.AddLabel:output_type -> boardpb.AddLabelResponse
	36, // 54: boardpb.BoardService.RemoveLabel:output_type -> boardpb.RemoveLabelResponse
	32, // 55: boardpb.BoardService.RestoreBoard:output_type -> boardpb.RestoreBoardResponse
	38, // 56: boardpb.BoardService.ArchiveBoard:output_type -> boardpb.ArchiveBoardResponse
	40, // 57: boardpb.BoardService.DeleteBoard:output_type -> boardpb.DeleteBoardResponse
	42, // 58: boardpb.BoardService.GetBoardIDByList:output_type -> boardpb.GetBoardIDByListResponse
	44, // 59: boardpb.BoardService.GetBoardIDByCard:output_type -> boardpb.GetBoardIDByCardResponse
	42, // [42:60] is the sub-list for method output_type
	24, // [24:42] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_board_proto_init() }
func file_board_proto_init() {
	if File_board_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_board_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Board); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoardMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBoardNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBoardNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBoardUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBoardUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBoardUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBoardUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignBoardUsersRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignBoardUsersRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeBoardOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeBoardOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeBoardVisibilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeBoardVisibilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArchivedBoardListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArchivedBoardListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardIDByListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardIDByListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardIDByCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_board_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoardIDByCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_board_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_board_proto_goTypes,
		DependencyIndexes: file_board_proto_depIdxs,
		MessageInfos:      file_board_proto_msgTypes,
	}.Build()
	File_board_proto = out.File
	file_board_proto_rawDesc = nil
	file_board_proto_goTypes = nil
	file_board_proto_depIdxs = nil
}
